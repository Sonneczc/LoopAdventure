-----------------------------------------------------------------------------------------------------
前言:

这个游戏从许多游戏和漫画中借鉴了灵感.
本意是一个无尽循环的游戏,放置游戏. 这个游戏的想法来自于很多游戏,比如 战斗无止尽 battle without end, clicker game, cookie kingdom.
我的本意是把他做成一个传统的放置游戏

直到我看了小畑健的漫画杀戮轮回, 我认为这个漫画的故事提供了一个很有意思的思路.
这个漫画讲的是一个士兵每次在战场上战死之后就会回到开战的前一天,通过无数次的死亡积累经验和能力最终存活下去.

这个漫画给了我一个很好的思路,通过死亡来获得经验,通过战斗来累积实力.

这个游戏通过打败敌人来获得经验,但是经验只会在人物死亡之后获取,每次死亡人物将回到故事的起点,只有能力会被继承.如此轮回下去来战胜最终的boss.
------------------------------------------------------------------------------------------------------

设计:

	人物 类:

	Bio ->  Life-> Role -> Player & Enemy
	
	Bio 将包含 所有的基本属性(力量敏捷 etc.) 和关联属性 (暴击闪避 etc.) 所有的基本值将有初始默认值.

	在拥有基础属性之后,我打算分会改变属性和关联属性的事件(也就是哪些事情会使这些值改变),将他们分离出去会使之后的开发位置变得清晰.
	我把这些通用的改变属性的方法放在 Life 类中, 因此 Life 类 将会又能力改变他所继承的Bio, 而且Bio中有所有的初始值, 这便使这两个类有很清晰的结构.
	因此:

	Life 包含 通用的方法. 影响, 改变 基本属性和关联属性的方法

	Role 类会继承Life 同时也拥有了Bio中的属性
	最开始我认为这个类将承载玩家人物的特性,比如职业,职业的属性分配,经验,特性,天赋,还有一些特殊的方法以及通往Life的接口.
	后来想一想我简直太傻比了啊,Life里边的重要的东西可以是开放的,所以以后不会受到访问限制,属性配置也应该放在Life里,这样就保证了方法的一致性.
	然后Role 用来存放特殊的方法,比如某个职业不受反击,某个职业自然恢复什么的.

	Role 包含 特殊方法, 种族天赋, 职业特性

	Player & Enemy 这个就是广义的玩家层面了
	这个将包含最终玩家的一些数据吧还有一些和游戏界面的接口.
